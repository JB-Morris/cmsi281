package edu.cmsi.mike.Homework1;

public class TDShape {

	private static int side = 5;

	private static int xStart = 0;

	private static int yStart = 0;

	private static int xCheck = 2; 

	private static int yCheck = 2;


//square shape representation, an array is used to keep the formatting standard for other shapes, possibly set framework to create shape superclass
	private int square(int s, int x, int y) {
		this.side = s;
		this.xStart = x
		this.yStart = y



		int sqr[];

		sqr = new int[4];

		sqr[0] = s;
		sqr[1] = s;
		sqr[2] = s;
		sqr[3] = s;

		int area = sqr[0] * squ[0];
		int perimeter = sqr[0] * 4;

		//rewrite this section after learning more about arrays

		int info[];

		info = new int[4];

		info[0] = area;
		info[1] = perimeter;
		info[2] = x;
		info[3] = y;



		return info;


	}
//possible errors regarding the use of the square method
	public int getArea(int i[]) {
		i[] = square();

		area = i[0] * i[1];

		System.out.println("The area is: " area ".");

		return area;
	}

	public int getPermiter(int i[]) {

		i[] = square();

		int permiter = i[1];
		
		System.out.println("The permiter is: " permiter ".");

		return permiter;		
	}

	public boolean checkPoint(int i[], x2, y2) {
		i[] = square();

		int x, y, s;

		x = i[2];
		y = i[3];
		s = side;

		xCheck = x2;
		yCheck = y2;

		if(x < x2 < (x + s) ) {
			if(y < y2 < (y + s)){
				System.out.println("The point is within the shape.");
				return true;
			}else {
				System.out.println("The point is not within the shape.");
				return false;
			}
		}else {
			System.out.println("The point is not within the shape.");
			return false;
		}






	}

	public int translate() {
		//some code
	}

	public int getBoundingRectangle() {

	}
}